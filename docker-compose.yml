version: "3.8"

services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3
      - DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - EDGE_PORT=4566
      - HOSTNAME_EXTERNAL=localstack
      - PERSISTENCE=/var/lib/localstack/state
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  postgres:
    container_name: 'postgres'
    image: public.ecr.aws/docker/library/postgres:14.3-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 5
  aws_setup:
    image: mesosphere/aws-cli
    environment:
      - AWS_ACCESS_KEY_ID=accessKey
      - AWS_SECRET_ACCESS_KEY=secretKey
      - AWS_DEFAULT_REGION=ap-southeast-1
    entrypoint: /bin/sh -c
    command: >
      "
        timeout nc -v -z localstack 4566;
        aws --endpoint-url=http://localstack:4566 s3 mb s3://${AWS_BUCKET_NAME}
        aws --endpoint-url="http://localstack:4566" s3 ls
      "
    depends_on:
      - localstack